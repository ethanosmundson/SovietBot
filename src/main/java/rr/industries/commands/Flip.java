package rr.industries.commands;

import reactor.core.publisher.Mono;
import rr.industries.exceptions.BotException;
import rr.industries.util.*;

import java.util.HashMap;
import java.util.Map;

@CommandInfo(commandName = "flip", helpText = "flips text upside-down", pmSafe = true)
public class Flip implements Command {
    @SubCommand(name = "", Syntax = {@Syntax(helpText = "flips the supplied text", args = {@Argument(description = "Text", value = Validate.LONGTEXT)})})
    public Mono<Void> execute(CommContext cont) throws BotException {
        char[] inputChars = cont.getConcatArgs(1).toCharArray();
        StringBuilder response = new StringBuilder();
        for(int i = inputChars.length - 1; i >= 0; i--) {
            char c = inputChars[i];
            String outputChar = mapObject.get(c);
            if(outputChar == null) {
                outputChar = String.valueOf(c);
            }
            response.append(outputChar);
        }
        return cont.getMessage().getMessage().getChannel().flatMap(v -> v.createMessage(response.toString())).then();
    }

    private Map<Character, String> mapObject = new HashMap<>();

    public Flip() {
        mapObject.put('a', "…ê");
        mapObject.put('b', "q");
        mapObject.put('c', "…î");
        mapObject.put('d', "p");
        mapObject.put('e', "«ù");
        mapObject.put('f', "…ü");
        mapObject.put('g', "∆É");
        mapObject.put('h', "…•");
        mapObject.put('i', "ƒ±");
        mapObject.put('j', "…æ");
        mapObject.put('k', " û");
        mapObject.put('l', "◊ü");
        mapObject.put('m', "…Ø");
        mapObject.put('n', "u");
        mapObject.put('r', "…π");
        mapObject.put('t', " á");
        mapObject.put('v', " å");
        mapObject.put('w', " ç");
        mapObject.put('y', " é");
        mapObject.put('A', "‚àÄ");
        mapObject.put('B', "êêí");
        mapObject.put('C', "∆Ü");
        mapObject.put('D', "‚óñ");
        mapObject.put('E', "∆é");
        mapObject.put('F', "‚Ñ≤");
        mapObject.put('G', "‚ÖÅ");
        mapObject.put('J', "≈ø");
        mapObject.put('K', "‚ãä");
        mapObject.put('L', "À•");
        mapObject.put('M', "W");
        mapObject.put('P', "‘Ä");
        mapObject.put('Q', "Œå");
        mapObject.put('R', "·¥ö");
        mapObject.put('T', "‚ä•");
        mapObject.put('U', "‚à©");
        mapObject.put('V', "Œõ");
        mapObject.put('Y', "‚ÖÑ");
        mapObject.put('&', "‚Öã");
        mapObject.put('.', "Àô");
        mapObject.put(',', "'");
        mapObject.put('[', "]");
        mapObject.put(']', "[");
        mapObject.put('(', ")");
        mapObject.put(')', "(");
        mapObject.put('{', "}");
        mapObject.put('}', "{");
        mapObject.put('?', "¬ø");
        mapObject.put('!', "¬°");
        mapObject.put('\'', ",");
        mapObject.put('<', ">");
        mapObject.put('_', "‚Äæ");
        mapObject.put('\"', "‚Äû");
        mapObject.put('\\', "/");
        mapObject.put('/', "\\");
        mapObject.put('`', ",");
        mapObject.put('1', "∆ñ");
        mapObject.put('2', "·ÑÖ");
        mapObject.put('3', "∆ê");
        mapObject.put('4', "„Ñ£");
        mapObject.put('5', "œõ");
        mapObject.put('6', "9");
        mapObject.put('7', "„Ñ•");
        mapObject.put('9', "6");
    }
}
