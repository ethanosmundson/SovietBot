/*
 * This file is generated by jOOQ.
*/
package rr.industries.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import rr.industries.jooq.DefaultSchema;
import rr.industries.jooq.Indexes;
import rr.industries.jooq.Keys;
import rr.industries.jooq.tables.records.GuildsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Guilds extends TableImpl<GuildsRecord> {

    private static final long serialVersionUID = 456188003;

    /**
     * The reference instance of <code>guilds</code>
     */
    public static final Guilds GUILDS = new Guilds();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuildsRecord> getRecordType() {
        return GuildsRecord.class;
    }

    /**
     * The column <code>guilds.guildid</code>.
     */
    public final TableField<GuildsRecord, Long> GUILDID = createField("guildid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>guilds.greetchannel</code>.
     */
    public final TableField<GuildsRecord, Long> GREETCHANNEL = createField("greetchannel", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>guilds.joinmessage</code>.
     */
    public final TableField<GuildsRecord, String> JOINMESSAGE = createField("joinmessage", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>guilds.leavemessage</code>.
     */
    public final TableField<GuildsRecord, String> LEAVEMESSAGE = createField("leavemessage", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>guilds.prefix</code>.
     */
    public final TableField<GuildsRecord, String> PREFIX = createField("prefix", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>guilds.filter</code>.
     */
    public final TableField<GuildsRecord, Integer> FILTER = createField("filter", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("'false'", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>guilds</code> table reference
     */
    public Guilds() {
        this(DSL.name("guilds"), null);
    }

    /**
     * Create an aliased <code>guilds</code> table reference
     */
    public Guilds(String alias) {
        this(DSL.name(alias), GUILDS);
    }

    /**
     * Create an aliased <code>guilds</code> table reference
     */
    public Guilds(Name alias) {
        this(alias, GUILDS);
    }

    private Guilds(Name alias, Table<GuildsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Guilds(Name alias, Table<GuildsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SQLITE_AUTOINDEX_GUILDS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GuildsRecord> getPrimaryKey() {
        return Keys.PK_GUILDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GuildsRecord>> getKeys() {
        return Arrays.<UniqueKey<GuildsRecord>>asList(Keys.PK_GUILDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Guilds as(String alias) {
        return new Guilds(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Guilds as(Name alias) {
        return new Guilds(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Guilds rename(String name) {
        return new Guilds(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Guilds rename(Name name) {
        return new Guilds(name, null);
    }
}
